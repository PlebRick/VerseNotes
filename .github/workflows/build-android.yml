name: Build Android APK

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write
  actions: read

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 45
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: Debug environment
      run: |
        echo "Node version: $(node --version)"
        echo "NPM version: $(npm --version)"
        echo "Java version: $(java -version 2>&1 | head -1)"
        echo "Android SDK: $ANDROID_SDK_ROOT"
        echo "Android Home: $ANDROID_HOME"
        echo "Current directory: $(pwd)"
        echo "Directory contents:"
        ls -la
        
    - name: Fix dependency conflicts
      run: |
        echo "Fixing React version conflicts..."
        npm install react@19.0.0 react-dom@19.0.0 --legacy-peer-deps --force
        echo "React versions aligned"
        
    - name: Install dependencies
      run: |
        echo "Installing dependencies..."
        npm install --legacy-peer-deps --force
        echo "Dependencies installed successfully"
        
    - name: Install Expo CLI
      run: |
        echo "Installing Expo CLI..."
        npm install -g @expo/cli
        echo "Expo CLI installed"
        npx expo --version
        
    - name: Check project structure
      run: |
        echo "Checking project files..."
        ls -la
        echo "Package.json exists: $(test -f package.json && echo 'YES' || echo 'NO')"
        echo "App.tsx exists: $(test -f App.tsx && echo 'YES' || echo 'NO')"
        echo "src directory exists: $(test -d src && echo 'YES' || echo 'NO')"
        
    - name: Clean existing Android project
      run: |
        echo "Cleaning any existing Android project..."
        rm -rf android ios
        echo "Cleaned successfully"
        
    - name: Run Expo prebuild
      run: |
        echo "Running Expo prebuild..."
        npx expo prebuild --platform android --no-install
        echo "Prebuild completed successfully"
        
    - name: Check if Android project was created
      run: |
        if [ -d "android" ]; then
          echo "✅ Android directory created successfully"
          echo "Android directory contents:"
          ls -la android/
          echo "Gradlew exists: $(test -f android/gradlew && echo 'YES' || echo 'NO')"
        else
          echo "❌ Android directory not found"
          echo "Available directories:"
          ls -la
          exit 1
        fi
        
    - name: Make gradlew executable
      run: |
        if [ -f "android/gradlew" ]; then
          chmod +x android/gradlew
          echo "✅ Gradlew made executable"
        else
          echo "❌ Gradlew not found"
          exit 1
        fi
        
    - name: Test Gradle build
      run: |
        echo "Testing Gradle build..."
        cd android
        ./gradlew assembleRelease --no-daemon --stacktrace --info
        
    - name: Check for APK
      run: |
        echo "Looking for APK files..."
        find . -name "*.apk" -type f
        
    - name: Extract version from app.config.js
      id: get_version
      run: |
        VERSION=$(node -e "const config = require('./app.config.js'); console.log(config.default.expo.version);")
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
        echo "Extracted version: $VERSION"
        
    - name: Rename APK
      run: |
        if [ -f "android/app/build/outputs/apk/release/app-release.apk" ]; then
          mv android/app/build/outputs/apk/release/app-release.apk android/app/build/outputs/apk/release/VerseNotes-v${{ steps.get_version.outputs.VERSION }}.apk
          echo "✅ APK renamed to VerseNotes-v${{ steps.get_version.outputs.VERSION }}.apk"
        else
          echo "❌ APK not found"
          exit 1
        fi
        
    - name: Upload APK if found
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: VerseNotes-v${{ steps.get_version.outputs.VERSION }}
        path: android/app/build/outputs/apk/release/VerseNotes-v${{ steps.get_version.outputs.VERSION }}.apk
        if-no-files-found: warn
        
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/') && success()
      uses: softprops/action-gh-release@v1
      with:
        files: android/app/build/outputs/apk/release/VerseNotes-v${{ steps.get_version.outputs.VERSION }}.apk
        name: VerseNotes ${{ github.ref_name }}
        body: |
          Android APK for VerseNotes ${{ github.ref_name }}
          
          Download the APK below and install on your Android device.
          
          Requirements:
          - Android 13 or higher
          - Enable "Unknown Sources" in settings
          
          Features:
          - Bible study with WEB translation
          - Plain text note-taking
          - Backup/export functionality
          - Optimized for Daylight DC1 tablet
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 